<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>%date [%thread] %-5level [%logger{50}] %file:%line - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 如果只是想要 INFO 级别的日志，只是过滤 INFO 还是会输出 ERROR 日志，因为 ERROR 的级别高，所以我们使用下面的策略，可以避免输出 ERROR 的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤 ERROR -->
            <level>ERROR</level>
            <!-- 匹配到就禁止 -->
            <onMatch>DENY</onMatch>
            <!-- 没有匹配到就允许 -->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <!-- 日志名称，如果没有 File 属性，那么只会使用 FileNamePattern 的文件路径规则如果同时有 <File> 和 <FileNamePattern> ，那么当天日志是 <File> ，明天会自动把今天的日志改名为今天的日期。即，<File> 的日志都是当天的 -->
        <!-- <File>logs/info.logback.log</File> -->
        <!-- 滚动策略，按照时间滚动 TimeBasedRollingPolicy -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 文件路径，定义了日志的切分方式——把每一天的日志归档到一个文件中，以防止日志填满整个磁盘空间 -->
            <FileNamePattern>logs/logback/info.created_on_%d{yyyy-MM-dd}.part_%i.log</FileNamePattern>
            <!-- 只保留最近 180 天的日志 -->
            <maxHistory>180</maxHistory>
            <!-- 用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志 -->
            <!-- <totalSizeCap>1GB</totalSizeCap> -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- maxFileSize 是活动文件的大小，默认值是 10MB -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level [%logger{50}] %file:%line - %msg%n</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 如果只是想要 ERROR 级别的日志，那么需要过滤一下，默认是 INFO 级别的，ThresholdFilter -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!-- 日志名称，如果没有 File 属性，那么只会使用 FileNamePattern 的文件路径规则如果同时有 <File> 和 <FileNamePattern> ，那么当天日志是 <File> ，明天会自动把今天的日志改名为今天的日期。即，<File> 的日志都是当天的 -->
        <!-- <File>logs/error.logback.log</File> -->
        <!-- 滚动策略，按照时间滚动 TimeBasedRollingPolicy -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 文件路径，定义了日志的切分方式——把每一天的日志归档到一个文件中，以防止日志填满整个磁盘空间 -->
            <FileNamePattern>logs/logback/error.created_on_%d{yyyy-MM-dd}.part_%i.log</FileNamePattern>
            <!-- 只保留最近 180 天的日志 -->
            <maxHistory>180</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- maxFileSize 是活动文件的大小，默认值是 10MB -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level [%logger{50}] %file:%line - %msg%n</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE_INFO"/>
        <appender-ref ref="FILE_ERROR"/>
    </root>
</configuration>
